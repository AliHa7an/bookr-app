# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Role {
  id: Float!
  name: String!
}

type ShopOpeningHours {
  id: Float!
  shop: Shop!
  day: String!
  openingTime: String
  closingTime: String
  isOpen: Boolean!
}

type ShopOpeningOverride {
  id: Float!
  shop: Shop!
  date: DateTime!
  openingTime: String
  closingTime: String
  isOpen: Boolean!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Shop {
  id: Float!
  name: String!
  address: String!
  latitude: Float!
  longitude: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  owner: User!
  serviceCategories: [ServiceCategory!]!
  openingHours: [ShopOpeningHours!]
  openingOverrides: [ShopOpeningOverride!]
  staff: [User!]
}

type ServiceCategory {
  id: Float!
  name: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserVerification {
  id: Float!
  user: User!
  code: String!
  type: String!
  expiresAt: DateTime
  isUsed: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: Float!
  firstName: String
  lastName: String
  email: String
  phone: String
  countryCode: String
  password: String
  role: Role!
  socialProvider: String
  socialId: String
  latitude: Float
  longitude: Float
  shop: Shop
  createdAt: DateTime!
  updatedAt: DateTime!
  verificationCodes: [UserVerification!]
}

type AuthResponse {
  accessToken: String!
  user: User!
}

type Query {
  findAllUsers: [User!]!
  findOneUser(id: Float!): User!
}

type Mutation {
  login(loginInput: LoginInput!): AuthResponse!
  signup(signupInput: SignupInput!): AuthResponse!
  forgotPassword(email: String!): String!
  resetPassword(email: String!, code: String!, newPassword: String!): String!
  createDefaultRoles: [Role!]!
}

input LoginInput {
  email: String!
  password: String
  socialProvider: String
  socialId: String
}

input SignupInput {
  firstName: String
  lastName: String
  email: String
  phone: String
  gender: String
  countryCode: String
  password: String
  role: UserRoles
  socialProvider: String
  socialId: String
  preferredServiceCategories: [Int!]
}

enum UserRoles {
  CUSTOMER
  ADMIN
  STAFF
}